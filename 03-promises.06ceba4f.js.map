{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAlBPQ,KAAO,CACLC,WAAYC,SAASC,cAAc,qBACnCC,UAAWF,SAASC,cAAc,oBAClCE,YAAaH,SAASC,cAAc,sBACpCG,KAAMJ,SAASC,cAAc,UAG/BH,KAAKM,KAAKC,iBAAiB,UAe3B,SAAgBC,GACdA,EAAIC,iBAEJ,MAAMR,GAAcD,KAAKC,WAAWS,MAC9BN,GAAaJ,KAAKI,UAAUM,MAElC,IAAK,IAAIC,EAAI,EAAGA,GAAKX,KAAKK,YAAYK,MAAOC,GAAK,EAAE,CAIlDrB,EAAcqB,EAFOV,EAAaG,EAAYO,GAG7CC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,UAE/DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nrefs = {\n  delayValue: document.querySelector('input[name=delay]'),\n  stepValue: document.querySelector('input[name=step]'),\n  amountValue: document.querySelector('input[name=amount]'),\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onForm)\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n}\n\nfunction onForm(evt) {\n  evt.preventDefault();\n\n  const delayValue = +refs.delayValue.value\n  const stepValue = +refs.stepValue.value;\n\n  for (let i = 0; i <= refs.amountValue.value; i += 1){\n\n    const delayPerStep = delayValue + stepValue * i;\n\n    createPromise(i, delayPerStep)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }  \n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","refs","delayValue","document","querySelector","stepValue","amountValue","form","addEventListener","evt","preventDefault","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.06ceba4f.js.map"}